rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects - users can read projects they're assigned to
    match /projects/{projectId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.assignments[].userId;
      
      // Only admins can create/update/delete projects
      allow create, update, delete: if request.auth != null && 
        getUserRole(request.auth.uid) == 'admin';
    }
    
    // Checklists - users can read checklists for projects they're assigned to
    match /checklists/{checklistId} {
      allow read: if request.auth != null && 
        isAssignedToProject(request.auth.uid, resource.data.projectId);
      
      // Only admins can create/update/delete checklists
      allow create, update, delete: if request.auth != null && 
        getUserRole(request.auth.uid) == 'admin';
    }
    
    // Shot Items - users can read and update items for projects they're assigned to
    match /shotItems/{shotItemId} {
      allow read: if request.auth != null && 
        isAssignedToProjectByChecklist(request.auth.uid, resource.data.checklistId);
      
      // Users can update completion status and add new items
      allow update: if request.auth != null && 
        isAssignedToProjectByChecklist(request.auth.uid, resource.data.checklistId) &&
        onlyUpdatingAllowedFields();
      
      // Users can create new shot items (user-added items)
      allow create: if request.auth != null && 
        request.data.createdBy == request.auth.uid &&
        request.data.isUserAdded == true &&
        isAssignedToProjectByChecklist(request.auth.uid, request.data.checklistId);
      
      // Only admins can delete items
      allow delete: if request.auth != null && 
        getUserRole(request.auth.uid) == 'admin';
    }
    
    // Helper functions
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isAssignedToProject(userId, projectId) {
      let project = get(/databases/$(database)/documents/projects/$(projectId));
      return userId in project.data.assignments[].userId;
    }
    
    function isAssignedToProjectByChecklist(userId, checklistId) {
      let checklist = get(/databases/$(database)/documents/checklists/$(checklistId));
      return isAssignedToProject(userId, checklist.data.projectId);
    }
    
    function onlyUpdatingAllowedFields() {
      let allowedFields = ['isCompleted', 'completedAt', 'completedBy', 'updatedAt'];
      return request.data.diff(resource.data).affectedKeys().hasOnly(allowedFields);
    }
  }
}
